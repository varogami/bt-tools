#!/usr/bin/env python
# -*- coding: utf-8 -*-

#https://docs.python.org/3/library/curses.html
#http://gnosis.cx/publish/programming/charming_python_6.html
#https://github.com/rjw57/yt
#https://github.com/herrflockig/yt

import curses, locale

#locale.setlocale(locale.LC_ALL, '')
#code = locale.getpreferredencoding()

stdscr = curses.initscr()
curses.start_color()
stdscr.keypad(1)
#curses.nocbreak()
curses.noecho()
#curses.cbreak()
curses.curs_set(0)

curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK)
curses.init_pair(2, curses.COLOR_WHITE, curses.COLOR_BLACK)
curses.init_pair(3, curses.COLOR_CYAN, curses.COLOR_BLACK)
curses.init_pair(4, curses.COLOR_MAGENTA, curses.COLOR_BLACK)
curses.init_pair(5, curses.COLOR_BLACK, curses.COLOR_GREEN)
curses.init_pair(6, curses.COLOR_YELLOW, curses.COLOR_BLACK)
curses.init_pair(7, curses.COLOR_BLACK, curses.COLOR_GREEN)

#COLOR_BLACK = 0
#COLOR_BLUE = 4
#COLOR_CYAN = 6
#COLOR_GREEN = 2
#COLOR_MAGENTA = 5
#COLOR_RED = 1
#COLOR_WHITE = 7
#COLOR_YELLOW = 3

begin_x = 20
begin_y = 7
height = 80
width = 80
win = curses.newwin(height, width, begin_y, begin_x)

def test_pad():
    pad = curses.newpad(100, 100)
    #  These loops fill the pad with letters; this is
    # explained in the next section
    for y in range(0, 100):
        for x in range(0, 100):
            try:
                pad.addch(y,x, ord('a') + (x*x+y*y) % 26)
            except curses.error:
                pass

    #  Displays a section of the pad in the middle of the screen
    pad.refresh(0,0, 5,5, 20,75)


def test_string1():
    STR="Attuale modalit√†: Scrittura"
#    stdscr.addstr(0, 0, STR.encode(code), curses.A_REVERSE)
    stdscr.addstr(4, 0, STR, curses.A_REVERSE)
    stdscr.addstr(5, 0, "string test2", curses.A_REVERSE)
    stdscr.addstr(6, 0, "string test3", curses.A_REVERSE)
    stdscr.refresh()

def test_string2():
    stdscr.addstr(7,0, "RED ALERT!", curses.color_pair(2) )
    stdscr.refresh()

def quit_func():
    #curses.nocbreak()
    #curses.echo()
    curses.endwin()

def test_quit_key():
    while 1:
        c = stdscr.getch()
        if c == ord('o'):
            test_string2()
        if c == ord('p'):
            test_string1()
        elif c == ord('q'):
            quit_func()
            break  # Exit the while()
        elif c == curses.KEY_HOME:
            x = y = 0

#class HELP():
    #stdscr.addstr(0,0, "Help", curses.color_pair(2) )
    #stdscr.addstr(1,0, "______________________________", curses.color_pair(2) )
    #stdscr.addstr(3,0, "       1 - Help Window", curses.color_pair(2) )
    #stdscr.refresh()
    #stdscr.hline(10,0,"z",10)
    #stdscr.refresh()

    #test_quit_key()
    pass

class HELP2():
    win.addstr(0,0, "Help", curses.color_pair(2) )
    win.addstr(1,0, "______________________________", curses.color_pair(2) )
    win.addstr(3,0, "       1 - Help Window", curses.color_pair(2) )
    win.hline(10,0,"-",50)
    win.refresh()

    test_quit_key()

class SEARCH():
    pass

class RESULT():
    pass

class INFO():
    pass


class MAIN():
    def run(self):
#        self.loop = True
        while 1:
            self.c = stdscr.getch()
            if self.c == ord('o'):
                test_string2()
            if self.c == ord('p'):
                test_string1()
            elif self.c == ord('q'):
                self.loop = False
                quit_func()
                break
    def run2(self):
        test_quit_key()

#test = MAIN()
#test.run()

test = HELP2()
