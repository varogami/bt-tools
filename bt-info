#! /usr/bin/python
# -*- coding=utf-8 -*-

#bt-tools - tools to interact with some bittorrent sites by commandline
#Copyright (C) 2015-2016  varogami@altervista.org

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.


from lib import config
from lib import utils
from lib import common
import sys
import subprocess

class Func:
    def __init__(self):
        self.__conf = config.Config()
        self.__color = self.__conf.getColors()
        self.__json = self.__conf.getJson()
        self.__db = self.__conf.getDb()
        self.__debug = self.__conf.getDebug()
        self.common = common.Func(self.__color, self.__json['module'], self.__debug)
        
    def webpage(self, id):
        url = self.common.get_item_url(self.__db, id)
        if url is not None:
            if self.__debug:
                print "DEBUG: launching \"" + self.__json["browser"] + " " + url + "\""
            subprocess.call([self.__json["browser"], url])

    def update(self, id):
        pass
        
    def info(self, id):
        self.common.info(self.__json, self.__db, id)
    
    def __update_item(self, name_field, item, data):
        pass
        #engine = self.__conf.load_mod(name, module_config, self.__conf.getLogDir(), self.user_agent)

    def __print_update(self, string1, string2):
        print config.color_blu + string1 + config.color_base + string2 


    def cli(self):
        if len(sys.argv) == 1:
            self.help()
        elif len(sys.argv) == 2:
            self.info(sys.argv[1])
        elif len(sys.argv) == 3:
            if sys.argv[2] == "web":
                self.webpage(sys.argv[1])
            elif sys.argv[2] == "up":
                self.update(sys.argv[1])
            else:
                common.Func().print_error( sys.argv[2] + " is bad parameter" )
        else:
            common.Func().print_error("too much parameters")
            self.help()                
        
    def help(self):
        print "use:"
        print "bt-info ID - show info of item"
        print "bt-info ID web - show webpage of item"
        print "bt-info ID up - update item"

                        
if __name__ == "__main__":
    do = Func()
    do.cli()
    
